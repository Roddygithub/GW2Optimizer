name: Documentation

on:
  push:
    branches: [main]
    paths:
      - 'backend/**/*.py'
      - 'docs/**'
      - 'mkdocs.yml'
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install 'mkdocs>=1.5.3' 'mkdocs-material>=9.4.0' 'mkdocstrings[python]>=0.24' pdoc3 numpy
          cd backend
          pip install -r requirements.txt
          pip install -r requirements-dev.txt || true
          cd -

      - name: Generate API docs with pdoc
        run: |
          cd backend
          pdoc3 --html --output-dir ../docs/api app --force

      - name: Build MkDocs site
        run: |
          if [ -f "mkdocs.yml" ]; then
            mkdocs build --strict
          else
            echo "⚠️  mkdocs.yml not found, skipping MkDocs build"
          fi

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          cname: gw2optimizer.dev

  docs-status:
    name: Docs Status
    runs-on: ubuntu-latest
    needs: [build-docs]
    if: always()

    steps:
      - name: Check docs status
        run: |
          if [ "${{ needs.build-docs.result }}" == "success" ]; then
            echo "✅ Documentation built successfully!"
            exit 0
          else
            echo "❌ Documentation build failed"
            exit 1
          fi
